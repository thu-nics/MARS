defaults:
  - ../config/envs@_here_
  - ../config/deepspeed_zero@_here_
  - ../config/deepspeed_zero2@_here_
  - ../config/deepspeed_zero3@_here_
  - ../config/deepspeed_zero3_cpuoffload@_here_

hydra:
  run:
    dir: .
  output_subdir: null

exp_name: "agentic_pipeline"
seed: 42
logging_dir: /mnt/public/algm/tanzheyue/rl/rl_examples/exps/${exp_name}/output/logs
output_dir: /mnt/public/algm/tanzheyue/rl/rl_examples/exps/${exp_name}/output

# render_save_dir: ./runs/render
system_envs:
  USE_MODELSCOPE: "1"

#track_with: wandb
#tracker_kwargs:
#  api_key:
#  project: roll-agentic
#  name: ${exp_name}_sokoban
#  notes: "agentic_pipeline"
#  tags:
#    - agentic
#    - roll
#    - baseline

track_with: tensorboard
tracker_kwargs:
  log_dir: /mnt/public/algm/tanzheyue/rl/rl_examples/exps/${exp_name}/tensorboard_logs

num_gpus_per_node: 8

max_steps: 200
save_steps: 20
logging_steps: 1
eval_steps: 5
resume_from_checkpoint: false

rollout_batch_size: 384
val_batch_size: 1500
sequence_length: 32768

# reward_clip: 10
# advantage_clip: 4
dual_clip_loss: true
ppo_epochs: 1
adv_estimator: "reinforce"
# pg_clip: 0.1
#dual_clip_loss: True
init_kl_coef: 0.0
use_kl_loss: true
kl_loss_coef: 0.20

whiten_advantages: true
entropy_loss_coef: 0

pretrain: /mnt/public/yuanhuining/models/Qwen3-4B/

actor_train:
  model_args:
    flash_attn: fa2
    disable_gradient_checkpointing: false
    dtype: bf16
    model_type: ~
  training_args:
    lr_scheduler_type: cosine_with_min_lr
    learning_rate: 1e-6
    weight_decay: 0.05
    adam_beta1: 0.9
    adam_beta2: 0.95
    per_device_train_batch_size: 2
    gradient_accumulation_steps: 2
    warmup_steps: 10
  data_args:
    template: qwen3
  strategy_args:
    strategy_name: megatron_train
    strategy_config:
      sequence_parallel: true
      tensor_model_parallel_size: 4
      pipeline_model_parallel_size: 1
      expert_model_parallel_size: 1
      use_distributed_optimizer: true
      recompute_granularity: full
      accumulate_allreduce_grads_in_fp32: true
      check_for_nan_in_loss_and_grad: false
  device_mapping: list(range(0,8))
  infer_batch_size: 2

actor_infer:
  model_args:
    flash_attn: fa2
    disable_gradient_checkpointing: true
    dtype: bf16
  generating_args:
    max_new_tokens: 4096 # single-turn response length
    top_p: 0.99
    top_k: 100
    num_beams: 1
    temperature: 0.6
    num_return_sequences: 1
  data_args:
    template: qwen3
  strategy_args:
    strategy_name: vllm
    strategy_config:
      gpu_memory_utilization: 0.8
      block_size: 16
      load_format: auto
  device_mapping: list(range(0,8))

reference:
  model_args:
    flash_attn: fa2
    disable_gradient_checkpointing: true
    dtype: bf16
    model_type: ~
  data_args:
    template: qwen3
  strategy_args:
    strategy_name: hf_infer
    strategy_config: ~
  device_mapping: list(range(0,8))
  infer_batch_size: 2

enable_response_mask: True
action_sep: "||"
use_turn_scores: True # important to GAE when applying token-level rewards to token-level advantages. If False, will take the sum of scores as the reward for the last turn.
enable_think: True # False -> no think RL
max_actions_per_traj: 50
reward_normalization:
  grouping: tags # 可以tags(env_type)/traj_group_id(group)/batch(rollout_batch)... group_by计算reward/adv
  method: mean # asym_clip / identity / mean_std
  separate_norm_for_selfplay: true
whiten_rewards: true
advantage_norm: mean
# loss_agg_mode: token-mean
pg_clip_high: 0.20

custom_envs:
  TicTacToe:
    env_type: tictactoe
    max_actions_per_traj: ${max_actions_per_traj}
    grid_vocab: false
    env_config:
      built_in_opponent: none  # Changed from "mcts" to "none" for self-play training
      render_mode: text
  
  KuhnPoker:
    env_type: kuhn_poker
    max_actions_per_traj: ${max_actions_per_traj}
    grid_vocab: false
    env_config:
      built_in_opponent: none
      render_mode: text

  TicTacToe-first-100:
    env_type: tictactoe
    max_actions_per_traj: ${max_actions_per_traj}
    grid_vocab: false
    env_config:
      built_in_opponent: mcts
      render_mode: text

  TicTacToe-second-100:
    env_type: tictactoe
    max_actions_per_traj: ${max_actions_per_traj}
    grid_vocab: false
    env_config:
      built_in_opponent: mcts
      opponent_player: 0
      render_mode: text

  TicTacToe-first-1000:
    env_type: tictactoe
    max_actions_per_traj: ${max_actions_per_traj}
    grid_vocab: false
    env_config:
      built_in_opponent: mcts
      max_simulations: 1000
      render_mode: text

  TicTacToe-second-1000:
    env_type: tictactoe
    max_actions_per_traj: ${max_actions_per_traj}
    grid_vocab: false
    env_config:
      built_in_opponent: mcts
      opponent_player: 0
      max_simulations: 1000
      render_mode: text

  Connect4-first-100:
    env_type: connect_four
    max_actions_per_traj: ${max_actions_per_traj}
    grid_vocab: false
    env_config:
      built_in_opponent: mcts
      render_mode: text

  Connect4-second-100:
    env_type: connect_four
    max_actions_per_traj: ${max_actions_per_traj}
    grid_vocab: false
    env_config:
      built_in_opponent: mcts
      opponent_player: 0
      render_mode: text

  Connect4-first-1000:
    env_type: connect_four
    max_actions_per_traj: ${max_actions_per_traj}
    grid_vocab: false
    env_config:
      built_in_opponent: mcts
      max_simulations: 1000
      render_mode: text

  Connect4-second-1000:
    env_type: connect_four
    max_actions_per_traj: ${max_actions_per_traj}
    grid_vocab: false
    env_config:
      built_in_opponent: mcts
      opponent_player: 0
      max_simulations: 1000
      render_mode: text

  KuhnPoker-first:
    env_type: kuhn_poker
    max_actions_per_traj:  ${max_actions_per_traj}
    grid_vocab: false
    env_config:
      built_in_opponent: cfr
      render_mode: text

  KuhnPoker-second:
    env_type: kuhn_poker
    max_actions_per_traj:  ${max_actions_per_traj}
    grid_vocab: false
    env_config:
      built_in_opponent: cfr
      opponent_player: 0
      render_mode: text

  LeducPoker-first:
    env_type: leduc_poker
    max_actions_per_traj:  ${max_actions_per_traj}
    grid_vocab: false
    env_config:
      built_in_opponent: ne
      render_mode: text

  LeducPoker-second:
    env_type: leduc_poker
    max_actions_per_traj:  ${max_actions_per_traj}
    grid_vocab: false
    env_config:
      built_in_opponent: ne
      opponent_player: 0
      render_mode: text

  MiniHanabi:
    env_type: hanabi
    max_actions_per_traj:  ${max_actions_per_traj}
    grid_vocab: false
    env_config:
      render_mode: text

  SimpleHanabi:
    env_type: hanabi
    max_actions_per_traj:  ${max_actions_per_traj}
    grid_vocab: false
    env_config:
      render_mode: text
      colors: 3
      ranks: 2
      hand_size: 5
      max_information_tokens: 8
      max_life_tokens: 3
      
  FullHanabi:
    env_type: hanabi
    max_actions_per_traj:  ${max_actions_per_traj}
    grid_vocab: false
    env_config:
      render_mode: text
      colors: 3
      ranks: 3
      hand_size: 5
      max_information_tokens: 8
      max_life_tokens: 3

train_env_manager:
  format_penalty: 0.05 # sokoban env penalty_for_step=-0.1
  max_env_num_per_worker: 32
  env_groups: 96
  # under the same group, the env config and env seed are ensured to be equal
  group_size: 1
  tags: [TicTacToe, KuhnPoker, MiniHanabi]
  n_groups: [32, 32, 32] # If not set, all env names divide nums equally. Under the same group, the env config and env seed (prompt) are equal in each generation

val_env_manager:
  max_env_num_per_worker: 32
  env_groups: 480
  group_size: 1
  tags: [
    TicTacToe-first-100, 
    TicTacToe-second-100, 
    TicTacToe-first-1000, 
    TicTacToe-second-1000,
    Connect4-first-100,
    Connect4-second-100,
    Connect4-first-1000,
    Connect4-second-1000,
    KuhnPoker-first,
    KuhnPoker-second,
    LeducPoker-first,
    LeducPoker-second,
    MiniHanabi,
    SimpleHanabi,
    FullHanabi
  ]
  n_groups: [32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32] #
